#!/bin/bash

# If $FLASK_APP isn't set, check for application.py (for backwards compatibility), else implicitly default to app.py
if [[ -z "$FLASK_APP" ]]; then
    if [[ -f "application.py" ]]; then
        export FLASK_APP="application.py"
    fi
fi

# Enable development mode by default
export FLASK_ENV="${FLASK_ENV:-development}"

# But not debug mode
export FLASK_DEBUG="${FLASK_DEBUG:-0}"

# If `flask run`
if [[ "$1" == "run" ]]; then

    # Default options
    host="--host=0.0.0.0"
    port="--port=5000"
    reload="--reload"

    # Override default options
    options=""
    shift
    while test ${#} -gt 0
    do
        if [[ "$1" =~ ^--host= || "$1" =~ ^-h[^\s]+ ]]; then
            host="$1"
        elif [[ "$1" == "-h" || "$1" == "--host" ]]; then
            host="$1 $2"
            shift
        elif [[ "$1" =~ ^--port= || "$1" =~ ^-p[^\s]+ ]]; then
            port="$1"
        elif [[ "$1" == "-p" || "$1" == "--port"  ]]; then
            port="$1 $2"
            shift
        elif [[ "$1" =~ ^--(no-)?reload$ ]]; then
            reload="$1"
        else
            options+=" $1"
        fi
        shift
    done

    # Kill any process listing on the specified port
    # using regex to handle -pxxxx, -p xxxx, --port xxxx, --port=xxxx
    fuser --kill -TERM "${port//[^0-9]}/tcp" &> /dev/null

    # Execute monkey-patched flask
    /usr/local/bin/python /opt/cs50/lib/flask run $host $port $reload $options

# If not `flask run`
else

    # Execute flask
    /usr/local/bin/flask "$@"
fi
